#{{{ File management
:e              reload file
:q              quit
:q!             quit without saving changes
:w              write file
:w {file}       write new file
:x              write file and exit
#}}}
#{{{ Movement
    k
  h   l         basic motion
    j

w               next start of word
W               next start of whitespace-delimited word
e               next end of word
E               next end of whitespace-delimited word
b               previous start of word
B               previous start of whitespace-delimited word
0               start of line
$               end of line
gg              go to first line in file
G               go to end of file
f{				find next '{'
3f{				next 3 {
#}}}
#{{{ Insertion
#   To exit from insert mode use Esc or Ctrl-C
a = append after the cursor
A = append at the end of the line
i = insert before the cursor
I = insert at the beginning of the line
o = create a new line under the cursor
O = create a new line above the cursor
R = enter insert mode but replace instead of inserting chars
:r {file}       insert from file
#}}}
#{{{ Editing
u               undo
yy              yank (copy) a line
y{motion}       yank text that {motion} moves over
p               paste after cursor
P               paste before cursor
<Del> or x      delete a character
dd              delete a line
d{motion}       delete text that {motion} moves over
D or d$			delete from cursor to the end of line.
d^				delete from beinging to cursor.
#}}}
#{{{ Search and replace with the `:substitute` (aka `:s`) command
:s/foo/bar/		replace the first match of 'foo' with 'bar' on the current line only
:s/foo/bar/g	replace all matches (`g` flag) of 'foo' with 'bar' on the current line only
:%s/foo/bar/g	replace all matches of 'foo' with 'bar' in the entire file (`:%s`)
:%s/foo/bar/gc	ask to manually confirm (`c` flag) each replacement 
#}}}
#{{{ Vim automatic folding.
3{ and closing }
	Example: #{{{
			#}}}
#}}}
#{{{Vim completion
#http://georgebrock.github.io/talks/vim-completion/
#{{{ Simple Word Completion
[ctrl+p] = finds the previous matching word. {Insert Mode}
[ctrl+n] = finds the next matching word. {Insert Mode}
#}}}
#{{{ Context-aware word completion
[ctrl+x] = put vim in completion mode. {Insert Mode}
[ctrl+x][ctrl+p] = Repeat the command to continue adding matches. (Insert Mode)
#}}}
#{{{ Context-aware line completion
[ctrl+x][ctrl+l] = autocomplete the similar line.
#}}}
#{{{ Language-aware completion
[ctrl+x][ctrl+o] = autocomplete the class / def if the filetype plugin is enable
#}}}
#}}}
#{{{ Stop the vim
Ctrl+s	=	To freeze the vim session 
Ctrl+q	=	To Unfreeze the vim session
#}}}
#{{{ Sort selected lines in Vim
Shift-V =	Selecting lines
:sort	=	sorting those line with alphabetic
#}}}
#{{{ Later. Vim
:options
#}}}
